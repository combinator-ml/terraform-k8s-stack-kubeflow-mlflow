name: terraform
on: push
env:
  TF_CHDIR: -chdir=examples/basic
jobs:
  tests:
    name: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.15.0
    - name: Terraform version
      id: version
      run: terraform -v
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check -recursive
    - name: Terraform Init
      id: init
      run: terraform ${{ env.TF_CHDIR }} init
    - name: Terraform Validate
      id: validate
      run: terraform ${{ env.TF_CHDIR }} validate -no-color
    - name: Terraform Plan
      id: plan
      run: terraform ${{ env.TF_CHDIR }} plan -no-color
      continue-on-error: true
    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
